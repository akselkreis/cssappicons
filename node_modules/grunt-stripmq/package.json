{
  "name": "grunt-stripmq",
  "title": "grunt-stripmq",
  "description": "Create a desktop version of your mobile-first CSS",
  "version": "0.0.6",
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/jtangelder/grunt-stripmq/blob/master/LICENSE"
    }
  ],
  "scripts": {
    "test": "cd test && node run.js"
  },
  "keywords": [
    "gruntplugin",
    "mediaquery",
    "mobile",
    "css"
  ],
  "author": {
    "name": "Jorik Tangelder",
    "email": "j.tangelder@gmail.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/jtangelder/grunt-stripmq.git"
  },
  "bugs": {
    "url": "https://github.com/jtangelder/grunt-stripmq/issues"
  },
  "dependencies": {
    "grunt": "^0.4.5",
    "underscore": "^1.6.0",
    "css-stringify": "^1.4.1",
    "css-parse": "^1.7.0",
    "css-mediaquery": "^0.1.2",
    "clean-css": "^2.1.8"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "^0.10.0"
  },
  "main": "index",
  "readme": "# grunt-stripmq\n> Mobile-first CSS Fallback\n\n**grunt-stripmq** is a Grunt task to generate a fallback version of your fancy mobile first stylesheet. Since IE8 and lower dont support media queries, you can use a javascript library like respond.js to enable this, or generate a fallback version on build-time with this task.\n\nHere's the workflow:\n\n1. Write Mobile-first CSS\n2. Generate Desktop Fallback for IE < 9 with `grunt-stripmq`\n3. Old IE Users see the desktop version of your mobile-first website\n4. Profit!\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`, and is available on [npmjs.org](https://npmjs.org/package/grunt-stripmq)\n\n```shell\nnpm install grunt-stripmq --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```shell\ngrunt.loadNpmTasks('grunt-stripmq');\n```\n\n## The \"stripmq\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `stripmq` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n\n    stripmq: {\n        //Viewport options\n        options: {\n            width: 1000,\n            type: 'screen'\n        },\n        all: {\n            files: {\n                //follows the pattern 'destination': ['source']\n                'css/app-old-ie.css': ['css/app.css']\n            }\n        }\n    }\n});\n\n```\n\n### Demo\n\n#### app.css:\nSome mobile-first CSS that manipulates the background based on the viewport's width.\n```css\nbody {\n    background: url('mobile-background.png');\n    margin: 100px;\n}\n\n/* Change the background for tablets */\n@media screen and (min-width: 640px) {\n    body {\n        background: url('tablet-background.png');\n        margin: 120px;\n    }\n}\n\n/* Change the background again for desktop and increase the font-size */\n@media (min-width: 900px) {\n    body {\n        background: url('desktop-background.png');\n        font-size: 120%;\n    }\n}\n\n/* If it's a monochrome screen, show a black background */\n@media (monochrome) {\n    body {\n        background: black;\n    }\n}\n```\n\n#### app-old-ie.css (generated by grunt-stripmq)\nNote how the media queries were removed. The `monochrome` media query did not match the default `options` that were passed in, and were therefore discarded.\n\n```css\nbody {\n    margin: 120px;\n    background: url(desktop-background.png);\n    font-size: 120%;\n}\n```\n\n#### index.html\nIn your `index.html`, add in conditional comments to serve `app-old-ie.css` to old IE browsers, and your mobile-first styles to modern browsers that support media queries.\n\n````html\n<!--[if lt IE 9]><link rel=\"stylesheet\" href=\"app-old-ie.css\"><![endif]-->\n<!--[if gt IE 8]><!--><link rel=\"stylesheet\" href=\"app.css\"><!--<![endif]-->\n````\n\n\n### How it works\nHere's what the `stripmq` task does under the hood:\n\n* It parses your `source.css` files and copies over all default CSS rules to the `destination.css` file\n* When it encounters a media query, it parses the media query using [css-mediaquery](https://github.com/ericf/css-mediaquery)\n* It compares the parsed media query to the JavaScript object that you pass into `options` (more on this below)\n  * If the comparison passes, it unwraps all the rules from the media query and adds them to `destination.css` file in the same place\n  * If the comparison fails, it ignores all the rules within the media query\n* Cleans the CSS with clean-css, by merging selectors and properties.\n* It outputs the `destionation.css` file.\n\n\n\n### Options\n\nThe `options` object is used to specify a \"viewport\" that you want your old IE users to see. The media queries in your mobile-first stylesheet will be compared against the properties of the `options` object.\n\nThe `options` follows the W3C Recommendations for [CSS3 Media Queries](http://www.w3.org/TR/css3-mediaqueries/) and [CSS3 Values and Units](http://www.w3.org/TR/css3-values/). It supports all of the [Media Features](http://www.w3.org/TR/css3-mediaqueries/#media1) and will properly convert values to a common unit before comparing them.\n\n#### options.type\nType: `String`\nDefault value: `\"screen\"`\n\n#### options.width\nType: `Integer`\nDefault value: `1024`\n\nIf you pass in a number, the unit is assumed to be `px`. The following units are also supported: `em`, `rem`, `cm`, `mm`, `in`, `pt`, and `pc`.\n\n#### options['device-width']\nType: `Integer`\nDefault value: Defaults to `options.width` if provided, `1024` otherwise\n\n#### options.height\nType: `Integer`\nDefault value: `768`\n\n#### options['device-height']\nType: `Integer`\nDefault value: Defaults to `options.height` if provided, `768` otherwise\n\n#### options.resolution\nType: `String`\nDefault value: `\"1dppx\"`\n\nThis property also supports [other resolution units](http://www.w3.org/TR/css3-mediaqueries/#resolution0).\n\n#### options.orientation\nType: `String`\nDefault value: `\"landscape\"`\n\n#### options['aspect-ratio']\nType: `String`\nDefault value: Defaults to `options.width/options.height` if both are provided, `1024/768` otherwise.\n\n#### options['color']\nType: `Integer`\nDefault value: `3`\n\n## Contributing\n\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using Grunt.\n",
  "readmeFilename": "README.md",
  "homepage": "https://github.com/jtangelder/grunt-stripmq",
  "_id": "grunt-stripmq@0.0.6",
  "dist": {
    "shasum": "8f12999b363fe74744b04686238649445e26a38f"
  },
  "_from": "grunt-stripmq@0.0.6",
  "_resolved": "https://registry.npmjs.org/grunt-stripmq/-/grunt-stripmq-0.0.6.tgz"
}
